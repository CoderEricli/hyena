<!--
  ~  Copyright (C) 2019 Alpha Jiang. All rights reserved.
  ~
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  ~
  -->

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.alphajiang.hyena.ds.mapper.PointTableMapper">

    <select id="listCusPointTables" resultType="java.lang.String">
        show tables
    </select>

    <update id="createPointTable" flushCache="true">
        create table if not exists ${pointTableName} (
            id bigint(20) not null auto_increment primary key,
            `uid` varchar(128) not null,
            `name` varchar(256) not null default '',
            `point` bigint(20) not null default 0,
            `available` bigint(20) not null default 0,
            `used` bigint(20) not null default 0,
            `frozen` bigint(20) not null default 0,
            `refund` bigint(20) not null default 0,
            `expire` bigint(20) not null default 0,
            `seqNum` bigint(20) not null default 0,
            `enable` boolean not null default true,
            `createTime` timestamp default now(),
            `updateTime` timestamp default now()
        ) engine=InnoDB default charset=utf8mb4
    </update>

    <update id="createPointTableIndex" flushCache="true">
        CREATE UNIQUE INDEX ${pointTableName}_uid USING HASH ON ${pointTableName}(`uid`)
    </update>

    <update id="createPointTableIndexH2" flushCache="true">
        CREATE UNIQUE hash INDEX if not exists ${pointTableName}_uid ON ${pointTableName}(`uid`)
    </update>

    <update id="createPointLogTable" flushCache="true">
        create table if not exists ${pointTableName}_log (
        id bigint(20) not null auto_increment primary key,
        `pid` bigint(20) not null,
        `uid` varchar(128) not null,
        `seqNum` bigint(20) not null default 0,
        `type` tinyint not null default 0 comment '1: increase; 2: decrease; 3: freeze; 4: unfreeze; 5: expire; 6: cancel; 7: refund',
        `delta` bigint(20) not null default 0,
        `point` bigint(20) not null default 0,
        `available` bigint(20) not null default 0,
        `used` bigint(20) not null default 0,
        `frozen` bigint(20) not null default 0,
        `refund` bigint(20) not null default 0,
        `expire` bigint(20) not null default 0,
        `cost` bigint(20) not null default 0,
        `orderNo` varchar(128) not null default '',
        `tag` varchar(128) not null default '',
        `sourceType` int,
        `orderType` int,
        `payType` int,
        `extra` text,
        `note` text,
        `enable` boolean not null default true,
        `createTime` timestamp default now(),
        `updateTime` timestamp default now()
        ) engine=InnoDB default charset=utf8mb4
    </update>
    <update id="createPointLogTableIndexPid" flushCache="true">
        create index ${pointTableName}_log_pid using hash ON ${pointTableName}_log(pid)
    </update>
    <update id="createPointLogTableIndexUid" flushCache="true">
        create index ${pointTableName}_log_uid using hash ON ${pointTableName}_log(uid)
    </update>
    <update id="createPointLogTableIndexOrderNo" flushCache="true">
        create index ${pointTableName}_log_orderNo using hash ON ${pointTableName}_log(orderNo)
    </update>


    <update id="createPointRecTable" flushCache="true">
        create table if not exists ${pointTableName}_rec (
        id bigint(20) not null auto_increment primary key,
        `pid` bigint(20) not null,
        `seqNum` bigint(20) not null default 0,
        `total` bigint(20) not null default 0,
        `available` bigint(20) not null default 0,
        `used` bigint(20) not null default 0,
        `frozen` bigint(20) not null default 0,
        `refund` bigint(20) not null default 0,
        `cancelled` bigint(20) not null default 0,
        `expire` bigint(20) not null default 0,
        `totalCost` bigint(20) not null default 0,
        `usedCost` bigint(20) not null default 0,
        `orderNo` varchar(128) not null default '',
        `tag` varchar(128) not null default '',
        `issueTime` timestamp default now(),
        `sourceType` int,
        `orderType` int,
        `payType` int,
        `extra` text,
        `expireTime` datetime,
        `enable` boolean not null default true,
        `createTime` timestamp default now(),
        `updateTime` timestamp default now()
        ) engine=InnoDB default charset=utf8mb4
    </update>

    <update id="createPointRecTableIndexPid" flushCache="true">
        create index ${pointTableName}_rec_pid using hash ON ${pointTableName}_rec(pid)
    </update>

    <update id="createPointRecTableIndexTag" flushCache="true">
        create index ${pointTableName}_rec_tag using hash ON ${pointTableName}_rec(tag)
    </update>

    <update id="createPointRecTableIndexOrderNo" flushCache="true">
        create index ${pointTableName}_rec_orderNo using hash ON ${pointTableName}_rec(orderNo);
    </update>

    <update id="createPointRecordLogTable" flushCache="true">
        create table if not exists ${pointTableName}_rec_log (
        id bigint(20) not null auto_increment primary key,
        `pid` bigint(20) not null,
        `seqNum` bigint(20) not null default 0,
        `recId` bigint(20) not null,
        `type` tinyint not null default 0 comment '1: increase; 2: decrease; 3: freeze; 4: unfreeze; 5: expire; 6: cancel; 7: refund',
        `delta` bigint(20) not null default 0,
        `available` bigint(20) not null default 0,
        `used` bigint(20) not null default 0,
        `frozen` bigint(20) not null default 0,
        `refund` bigint(20) not null default 0,
        `cancelled` bigint(20) not null default 0,
        `expire` bigint(20) not null default 0,
        `cost` bigint(20) not null default 0,
        `sourceType` int,
        `orderType` int,
        `payType` int,
        `note` text,
        `enable` boolean not null default true,
        `createTime` timestamp default now()
        ) engine=InnoDB default charset=utf8mb4
    </update>

    <update id="createPointRecordLogTableIndexPid" flushCache="true">
        create index ${pointTableName}_rec_log_pid using hash ON ${pointTableName}_rec_log(pid)
    </update>
    <update id="createPointRecordLogTableIndexRecId" flushCache="true">
        create index ${pointTableName}_rec_log_recId using hash ON ${pointTableName}_rec_log(recId)
    </update>




</mapper>