<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.alphajiang.hyena.ds.mapper.PointLogMapper">

    <insert id="addPointLog" useGeneratedKeys="true" keyProperty="pointLog.id" keyColumn="id">
        insert into `${pointTableName}_log` (
        `pid`, `uid`, `seqNum`, `type`,
        `delta`, `deltaCost`, `point`, `available`,
        `used`, `frozen`, `refund`, `expire`,
        `cost`, `frozenCost`,
        `tag`,
        <if test="pointLog.orderNo != null">
        `orderNo`,
        </if>
        <if test="pointLog.sourceType != null">
            `sourceType`,
        </if>
        <if test="pointLog.orderType != null">
            `orderType`,
        </if>
        <if test="pointLog.payType != null">
            `payType`,
        </if>
        `extra`, `note`
        ) values(
        #{pointLog.pid}, #{pointLog.uid}, #{pointLog.seqNum}, #{pointLog.type},
        #{pointLog.delta}, #{pointLog.deltaCost}, #{pointLog.point}, #{pointLog.available},
        #{pointLog.used}, #{pointLog.frozen}, #{pointLog.refund}, #{pointLog.expire},
        #{pointLog.cost}, #{pointLog.frozenCost},
        #{pointLog.tag},
        <if test="pointLog.orderNo != null">
        #{pointLog.orderNo},
        </if>
        <if test="pointLog.sourceType != null">
            #{pointLog.sourceType},
        </if>
        <if test="pointLog.orderType != null">
            #{pointLog.orderType},
        </if>
        <if test="pointLog.payType != null">
            #{pointLog.payType},
        </if>
        #{pointLog.extra}, #{pointLog.note} )
    </insert>

    <update id="updateCost" >
        update `${pointTableName}_log` set `cost` = #{cost} where id=#{id}
    </update>

    <select id="listPointLog" resultType="io.github.alphajiang.hyena.model.dto.PointLog">
        select log.*
        from `${pointTableName}_log` as log

        where 1=1
        <if test="param.pid &gt; 0">
            and log.pid = #{param.pid}
        </if>
        <if test="param.seqNum &gt; 0">
            and log.seqNum = #{param.seqNum}
        </if>
        <if test="@io.github.alphajiang.hyena.utils.StringUtils@isNotBlank( param.uid )">
            and log.uid = #{param.uid}
        </if>
        <if test="@io.github.alphajiang.hyena.utils.StringUtils@isNotBlank( param.tag )">
            and log.tag = #{param.tag}
        </if>
        <if test="@io.github.alphajiang.hyena.utils.StringUtils@isNotBlank( param.orderNo )">
            and log.orderNo = #{param.orderNo}
        </if>
        <if test="@io.github.alphajiang.hyena.utils.CollectionUtils@isNotEmpty( param.logTypes )">
            and log.`type` in
            <foreach item="logType" collection="param.logTypes"
                     open="(" separator="," close=")">
                #{logType}
            </foreach>
        </if>
        <if test="@io.github.alphajiang.hyena.utils.CollectionUtils@isNotEmpty( param.sourceTypes )">
            and log.`sourceType` in
            <foreach item="sourceType" collection="param.sourceTypes"
                     open="(" separator="," close=")">
                #{sourceType}
            </foreach>
        </if>
        <if test="@io.github.alphajiang.hyena.utils.CollectionUtils@isNotEmpty( param.orderTypes )">
            and log.`orderType` in
            <foreach item="orderType" collection="param.orderTypes"
                     open="(" separator="," close=")">
                #{orderType}
            </foreach>
        </if>
        <if test="@io.github.alphajiang.hyena.utils.CollectionUtils@isNotEmpty( param.payTypes )">
            and log.`payType` in
            <foreach item="payType" collection="param.payTypes"
                     open="(" separator="," close=")">
                #{payType}
            </foreach>
        </if>
        <if test="param.enable != null">
            and log.enable = #{param.enable}
        </if>
        <if test="@io.github.alphajiang.hyena.utils.StringUtils@isNotBlank( param.sk )">
            <bind name="pattern" value="'%' + param.sk + '%'"/>
            and (
            log.tag like #{pattern}
            or log.orderNo like #{pattern}
            )
        </if>
        <if test="@io.github.alphajiang.hyena.utils.CollectionUtils@isNotEmpty( param.sorts )">
            <foreach item="sort" collection="param.sorts"
                     open="order by" separator="," close=" ">
                ${sort.columnsString} ${sort.order}
            </foreach>
        </if>
        <choose>
            <when test="param.start != null and param.size != null">
                limit #{param.start},#{param.size}
            </when>
            <when test="param.size != null">
                limit #{param.size}
            </when>
        </choose>
        <if test="param.lock == true">
            for update
        </if>
    </select>

    <select id="countPointLog" resultType="Long">
        select count(distinct log.id)
        from `${pointTableName}_log` as log
        where 1=1
        <if test="param.pid &gt; 0">
            and log.pid = #{param.pid}
        </if>
        <if test="@io.github.alphajiang.hyena.utils.StringUtils@isNotBlank( param.uid )">
            and log.uid = #{param.uid}
        </if>
        <if test="@io.github.alphajiang.hyena.utils.StringUtils@isNotBlank( param.tag )">
            and log.tag = #{param.tag}
        </if>
        <if test="@io.github.alphajiang.hyena.utils.StringUtils@isNotBlank( param.orderNo )">
            and log.orderNo = #{param.orderNo}
        </if>
        <if test="@io.github.alphajiang.hyena.utils.CollectionUtils@isNotEmpty( param.logTypes )">
            and log.`type` in
            <foreach item="logType" collection="param.logTypes"
                     open="(" separator="," close=")">
                #{logType}
            </foreach>
        </if>
        <if test="@io.github.alphajiang.hyena.utils.CollectionUtils@isNotEmpty( param.sourceTypes )">
            and log.`sourceType` in
            <foreach item="sourceType" collection="param.sourceTypes"
                     open="(" separator="," close=")">
                #{sourceType}
            </foreach>
        </if>
        <if test="@io.github.alphajiang.hyena.utils.CollectionUtils@isNotEmpty( param.orderTypes )">
            and log.`orderType` in
            <foreach item="orderType" collection="param.orderTypes"
                     open="(" separator="," close=")">
                #{orderType}
            </foreach>
        </if>
        <if test="@io.github.alphajiang.hyena.utils.CollectionUtils@isNotEmpty( param.payTypes )">
            and log.`payType` in
            <foreach item="payType" collection="param.payTypes"
                     open="(" separator="," close=")">
                #{payType}
            </foreach>
        </if>
        <if test="param.enable != null">
            and log.enable = #{param.enable}
        </if>
        <if test="@io.github.alphajiang.hyena.utils.StringUtils@isNotBlank( param.sk )">
            <bind name="pattern" value="'%' + param.sk + '%'"/>
            and (
            log.tag like #{pattern}
            or log.orderNo like #{pattern}
            )
        </if>

    </select>
</mapper>